[project]
name = "mystbin-py"
version = "7.1.1"
description = "A small simple wrapper around the mystb.in API."
authors = [{ name = "Alex NÃ¸rgaard", email = "umbra@abstractumbra.dev" }]
dependencies = [
    "aiohttp<4.0,>=3.8",
    "aiohttp[speedups]<4.0,>=3.8; extra == \"speed\"",
]
requires-python = "<4.0,>=3.8"
readme = "README.md"
license = { file = "LICENSE" }
keywords = ["mystbin", "paste"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet",
    "Typing :: Typed",
]

[project.urls]
"Issue Tracker" = "https://github.com/PythonistaGuild/mystbin.py/issues"
homepage = "https://github.com/PythonistaGuild/mystbin.py"
repository = "https://github.com/PythonistaGuild/mystbin.py"

[project.scripts]
version = "mystbin.__main__:show_version"

[dependency-groups]
speedups = ["aiohttp[speedups]<4.0,>=3.8"]
docs = ["sphinx", "sphinxcontrib-trio", "furo"]
dev = ["ruff", "typing-extensions"]

[tool.pdm]
distribution = true

[tool.pdm.build]
includes = ["mystbin", "mystbin/**/*.py", "mystbin/py.typed", "LICENSE"]

[tool.pdm.scripts]
docs = "sphinx-build -aEWT --keep-going docs/ docs/build" # TODO: add -n when sphinx is fixed

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.ruff]
line-length = 125
target-version = "py38"

[tool.ruff.lint]
preview = true
select = [
    "A",
    "ANN",
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "COM",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "F",
    "FA",
    "FBT",
    "FURB",
    "G",
    "I",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PERF",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLW",
    "PTH",
    "PYI",
    "Q",
    "Q003",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLOT",
    "T20",
    "TC",
    "TID",
    "TRY",
    "UP",
    "YTT",
    "DOC",
]
ignore = [
    "ANN401",
    "EM101",   # in this case this is okay
    "F401",
    "F402",
    "F403",
    "F405",
    "PD011",   # this is not a numpy codebase
    "PERF203",
    "PLC0414", # pyright ruling for `as` imports needed
    "Q000",
    "RUF001",
    "RUF009",
    "S101",    # assert is used for type checking in this codebase
    "SIM105",
    "TRY003",  # over-eager rule
    "TRY301",  # unrealistic rule
    "UP034",
    "UP038",
]
unfixable = [
    "E501", # line length handled in other ways by ruff format
    "ERA",  # Don't delete commented out code
]
exclude = ["docs/conf.py"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "double"

[tool.ruff.lint.flake8-tidy-imports.banned-api]
# https://discuss.python.org/t/problems-with-typeis/55410/6
# https://discuss.python.org/t/problems-with-typeis/55410/46
# Until what can go into a TypeIs/TypeGuard changes, these are just dangerous.
"typing.TypeIs".msg = "TypeIs is fundamentally unsafe, even when using it as described to be safe"
"typing.TypeGuard".msg = "TypeGuard is fundamentally unsafe"
"typing_extensions.TypeIs".msg = "TypeIs is fundamentally unsafe, even when using it as described to be safe"
"typing_extensions.TypeGuard".msg = "TypeGuard is fundamentally unsafe"


[tool.pyright]
ignore = ["docs/conf.py"]
include = ["mystbin/**/*.py"]
useLibraryCodeForTypes = true
typeCheckingMode = "strict"
pythonVersion = "3.8"
